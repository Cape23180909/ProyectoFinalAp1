@page "/Cobrador/Delete/{CobradorId:int}"
@inject CobradorService CobradorService
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@inject ToastService toastService

<PageTitle>Eliminar del cobrador</PageTitle>
<div class="container mt-5 pt-3">
    <div class="card shadow-lg border-0">
        <div class="card-header text-center py-5">
            <h2>Eliminar del cobrador</h2>
        </div>
        <Toasts class="p-3" Messages="Mensaje" AutoHide="true" StackLength="3" Placement="ToastsPlacement.TopRight" />
        <div class="card-body">
            <div class="row">
                @* Foto de la Cedula *@
                <div class="col-md-4 text-center mb-4">
                    <strong class="d-block mb-2">Foto de la Cédula</strong>
                    @if (!string.IsNullOrEmpty(cobrador?.FotoCedulaURL))
                    {
                        <img src="@cobrador.FotoCedulaURL" alt="Foto de la cédula" class="img-thumbnail shadow-sm">
                    }
                </div>
               
                <div class="col-md-8">
                    <div class="row">
                     @*    Numero de cedula *@
                        <div class="col-md-6 mb-4">
                            <div class="info-block">
                                <strong>Número de Cédula:</strong>
                                <p class="d-block">@cobrador?.NumeroCedula</p>
                            </div>
                        </div>
                        @* Nombres *@
                        <div class="col-md-6 mb-4">
                            <div class="info-block">
                                <strong>Nombres:</strong>
                                <p class="d-block">@cobrador?.Nombres</p>
                            </div>
                        </div>
                        @* Email *@
                        <div class="col-md-6 mb-4">
                            <div class="info-block">
                                <strong>Email:</strong>
                                <p class="d-block">@cobrador?.Email</p>
                            </div>
                        </div>
                        @* Estado *@
                        <div class="col-md-6 mb-4">
                            <div class="info-block">
                                <strong>Estado:</strong>
                                <p class="d-block">@cobrador?.Estado</p>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                     @*    Apellidos *@
                        <div class="col-md-6 mb-4">
                            <div class="info-block">
                                <strong>Apellidos:</strong>
                                <p class="d-block">@cobrador?.Apellidos</p>
                            </div>
                        </div>
                       @*  Direccion *@
                        <div class="col-md-6 mb-4">
                            <div class="info-block">
                                <strong>Dirección:</strong>
                                <p class="d-block">@cobrador?.Direccion</p>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                       @*  Telefono *@
                        <div class="col-md-6 mb-4">
                            <div class="info-block">
                                <strong>Teléfono:</strong>
                                <p class="d-block">@cobrador?.Telefono</p>
                            </div>
                        </div>
                      @*   Ciudad *@
                        <div class="col-md-6 mb-4">
                            <div class="info-block">
                                <strong>Ciudad:</strong>
                                <p class="d-block">@cobrador?.Ciudad</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-footer text-center footer-bar">
            <button class="btn btn-lg" @onclick="Volver">
                <i class="bi bi-arrow-left-circle-fill mt-3"></i> Volver
            </button>
            <button class="btn btn-lg delete-btn" @onclick="EliminarCobrador">
                <i class="bi bi-trash-fill mt-3"></i> Eliminar Cobrador
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int CobradorId { get; set; }
    public Cobradores? cobrador = new Cobradores();
    public List<Cobradores> listacobradores = new List<Cobradores>();
    private bool existe = false;
    private bool Estado = false;
    List<ToastMessage> Mensaje = new List<ToastMessage>();
    protected override async Task OnInitializedAsync()
    {
        if (CobradorId > 0)
        {
            cobrador = await CobradorService.Buscar(CobradorId) ?? new Cobradores();
            listacobradores = await CobradorService.ListarCobradores();
        }
    }
    public async Task EliminarCobrador()
    {
        if (cobrador == null)
        {
            toastService.Notify(new ToastMessage(
            ToastType.Danger,
            iconName: IconName.None,
             title: "Error",
            message: "El cobrador no fue encontrado."));
            await Task.Delay(3000);
            return;
        }
        if (await CobradorService.Eliminar(CobradorId))
        {
            toastService.Notify(new ToastMessage(
                 ToastType.Danger,
                 iconName: IconName.None,
                 title: "EliminarCobrador",
                 helpText: "",
                 message: "El Cobrador ya elimino correctamente."));
            await Task.Delay(3000);
            Volver();
        }
    }
    public async Task Volver()
    {
        toastService.Notify(new ToastMessage(
                  ToastType.Primary,
                  iconName: IconName.None,
                  title: "Volver",
                  helpText: "",
                  message: "El Cobrador ya volvio correctamente."));
        await Task.Delay(3000);
        navigationManager.NavigateTo("/Cobrador/Index");
    }
    private void ShowToast(ToastType type)
    {
        string title = type switch
        {
            ToastType.Success => "¡Éxito!",
            ToastType.Primary => "Advertencia",
            ToastType.Danger => "Error",
            _ => "Información"
        };

        string message = type switch
        {
            ToastType.Success => "El Cobrador se ha guardado correctamente.",
            ToastType.Primary => "El Cobrador ya volvio correctamente.",
            ToastType.Danger => "Hubo un error al guardar el cobrador.",
            _ => "Información general."
        };

        Mensaje.Add(new ToastMessage { Type = type, Title = title, Message = message });
        StateHasChanged();
    }
}