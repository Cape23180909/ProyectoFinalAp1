@page "/Cobro/Index"
@inject CobroService cobroService
@inject PrestamoService prestamoService
@inject DeudorService deudorService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Consulta de cobros</PageTitle>
<div class="container-fluid vh-100 d-flex flex-column justify-content-center">
    <div class="card shadow-lg w-100 h-100">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h3 class="card-title text-center w-100">Consulta de cobros</h3>
        </div>

        <div class="card-body overflow-auto">
            <div class="row mb-4 align-items-end">
                <div class="col-md-4">
                    <label for="Filtro" class="form-label"><strong>Filtrar por:</strong></label>
                    <select @bind="filtro" class="form-select">
                        <option value="0">Seleccione una opción</option>
                        <option value="deudores">Deudores</option>
                        <option value="PrestamoId">PrestamoId</option>
                        <option value="Mora">Mora</option>
                        <option value="ImportePagar">ImportePagar</option>
                    </select>
                </div>

                <div class="col-md-4">
                    <label for="ValorFiltro" class="form-label"><strong>Búsqueda:</strong></label>
                    <div class="input-group">
                        <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button">
                            <span class="bi bi-search"></span>
                            Buscar
                        </button>
                    </div>
                </div>

                <div class="col-md-1 ms-auto">
                    <a href="/Cobro/Create" class="btn btn-primary text-end">
                        <span class="bi bi-plus-square"></span>
                        Crear
                    </a>
                </div>
            </div>

            <table class="table text-center">
                <thead class="table-white">
                    <tr>
                        <th>CobroId</th>
                        <th>Deudores</th>
                        
                        <th>Mora</th>
                        <th>ImportePagar</th>
                        <th>FechaCobro</th>
                        <th>Ver</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cobro in listacobro)
                    {
                        <tr>
                            <td>@cobro.CobroId</td>
                            <td>@($"{cobro.Deudor?.Nombres} {cobro.Deudor?.Apellidos}")</td>
                            <td>@cobro.Mora</td>
                            <td>@cobro.ImportePagar</td>
                            <td>@cobro.FechaCobro</td>
                            <td>
                                <a href="/Cobro/Details/@cobro.CobroId" class="btn btn-outline-primary">
                                    <span class="bi bi-eye mt-3"></span>
                                </a>
                            </td>
                            <td>
                                <a href="/Cobro/Edit/@cobro.CobroId" class="btn btn-outline-success">
                                    <span class="bi bi-pencil-square mt-3"></span>
                                </a>
                            </td>
                            <td>
                                <a href="/Cobro/Delete/@cobro.CobroId" class="btn  btn-outline-danger">
                                    <span class="bi bi-trash mt-3"></span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer d-flex justify-content-between">
            <p class="mb-0">Total de cobros: @listacobro.Count</p>
        </div>
    </div>
</div>

@code {
    public Cobros cobro = new Cobros();
    public List<Cobros> listacobro = new List<Cobros>();
    public List<Prestamos> listaprestamo = new List<Prestamos>();
    public List<Deudores> listadeudore = new List<Deudores>();
    public string filtro = "0";
    public string valorFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        listadeudore = await deudorService.Listar(d => d.Nombres.Contains(valorFiltro) || d.Apellidos.Contains(valorFiltro));
        listacobro = await cobroService.Listar(p => true);
        listaprestamo = await prestamoService.Listar(p => true);
        await ActualizarListaPrestamos();
    }
    public async Task ActualizarListaPrestamos()
    {
        listaprestamo = await prestamoService.ListarPrestamosConDeudores();
        StateHasChanged(); 
    }
    public async Task Buscar()
    {
        if (string.IsNullOrWhiteSpace(valorFiltro))
        {
            listacobro = await cobroService.Listar(p => true);
        }
        else
        {
            if (filtro == "deudores")
            {
                listadeudore = await deudorService.Listar(d => d.Nombres.Contains(valorFiltro));
                listacobro = listacobro.Where(c => c.Deudor?.Nombres?.Contains(valorFiltro) ?? false).ToList();
            }
            else if (filtro == "Mora" && decimal.TryParse(valorFiltro, out decimal Mora))
            {
                listacobro = await cobroService.Listar(c => c.Mora == Mora);
            }
            else if (filtro == "ImportePagar" && decimal.TryParse(valorFiltro, out decimal ImportePagar))
            {
                listacobro = await cobroService.Listar(c => c.ImportePagar == ImportePagar);
            }
        }
    }
    private async Task Volver()
    {
        navigationManager.NavigateTo("/menu");
    }
}