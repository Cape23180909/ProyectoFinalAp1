@page "/Pago/Details"
@page "/Pago/Details/{PagoId:int}"
@inject PagoService pagoService
@inject DeudorService deudorService
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@inject ToastService toastService

<PageTitle>Detalle pago</PageTitle>
@if (pago != null)
{
    <div class="container-fluid vh-100 d-flex flex-column justify-content-center">
        <div class="card shadow-lg w-100 h-100">
            <div class="card-header d-flex justify-content-between align-items-center " style="background-color: #008DD9; color: #fff;">
                <h3 class="card-title text-center w-100">Detalle Pago</h3>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-md-10">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>PagoId:</strong>@pago.PagoId</li>
                                <li><strong>Deudor:</strong>@pago.deudores?.Nombres</li>
                                <li><strong>Capital:</strong>@pago.Capital</li>
                                <li><strong>PagoPendiente:</strong>@pago.PagoPendiente</li>
                                <li><strong>FechaPago:</strong>@pago.FechaPago</li>
                            </ul>
                        </div>
                    </div>

                    <div class="card-footer justify-content-center ">
                        <button type="button" @onclick="Volver" class="btn btn-outline-danger">
                            <span class="bi bi-arrow-left-circle-fill mt-3"></span>
                            Volver
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int PagoId { get; set; }
    public Pagos? pago { get; set; } = new Pagos();
    public List<Pagos> Listapago { get; set; } = new List<Pagos>();
    public List<Deudores> listadeudore { get; set; } = new List<Deudores>();
    public Deudores? deudore { get; set; } = new Deudores();
    private bool existe = false;
    protected override async Task OnInitializedAsync()
    {
        if (PagoId != 0)
        {
            pago = await pagoService.Buscar(PagoId);
            listadeudore = await deudorService.ListarDeudores();
        }
    }
    public async Task Volver()
    {

        toastService.Notify(new(ToastType.Primary, "Existo", "Ya volvio correctamente"));
        navigationManager.NavigateTo("/Pago/Index");
    }
}
