@page "/Abono/Index"
@inject AbonoService abonoService
@inject FacturaService FacturaService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Consulta de abonos</PageTitle>

<div class="container-fluid vh-100 d-flex flex-column justify-content-center">
    <div class="card shadow-lg w-100 h-100">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h3 class="card-title text-center w-100">Consulta de abonos</h3>
        </div>

        <div class="card-body overflow-auto">
            @* Contenido del filtro *@
            <div class="row mb-4 align-items-end">
                <div class="col-md-4">
                    <label for="Filtro" class="form-label"><strong>Filtrar por:</strong></label>
                    <select @bind="filtro" class="form-select">
                        <option value="0">Seleccione una opción</option>
                        <option value="FacturaId">FacturaId</option>
                        <option value="MontoAbono">MontoAbono</option>
                        <option value="FechaAbono">FechaAbono</option>
                       
                    </select>
                </div>

                <div class="col-md-4">
                    <label for="ValorFiltro" class="form-label"><strong>Búsqueda:</strong></label>
                    <div class="input-group">
                        <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button">
                            <span class="bi bi-search"></span>
                            Buscar
                        </button>
                    </div>
                </div>

                <div class="col-md-1 ms-auto">
                    <a href="/Abono/Create" class="btn btn-primary text-end">
                        <span class="bi bi-plus-square"></span>
                        Crear
                    </a>
                </div>
            </div>

            <table class="table  text-center">
                <thead class="table-white">
                    <tr>
                        <th>AbonoId</th>
                        <th>MontoAbono</th>
                        <th>FechaAbono</th>
                        <th>Ver</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var abono in listaabono)
                    {
                        <tr>
                            <td>@abono.AbonoId</td>
                            <td>@abono.MontoAbono</td>
                            <td>@abono.FechaAbono</td>
                            

                            <td>
                                <a href="/Abono/Details/@abono.AbonoId" class="btn btn-outline-primary">
                                    <span class="bi bi-eye mt-3"></span>
                                </a>
                            </td>
                            <td>
                                <a href="/Abono/Edit/@abono.AbonoId" class="btn btn-outline-success">
                                    <span class="bi bi-pencil-square mt-3"></span>
                                </a>
                            </td>
                            <td>
                                <a href="/Abono/Delete/@abono.AbonoId" class="btn btn-outline-danger">
                                    <span class="bi bi-trash mt-3"></span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer d-flex justify-content-between">
            <p class="mb-0">Total de abonos: @listaabono.Count</p>
        </div>
    </div>
</div>

@code {
    public Abonos abono = new Abonos();
    public List<Facturas> listafactura = new List<Facturas>();
    public List<Abonos> listaabono = new List<Abonos>();
    public string filtro = "0";
    public string valorFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        listaabono = await abonoService.Listar(a => true);
    }

    public async Task Buscar()
    {
        if (string.IsNullOrWhiteSpace(valorFiltro))
        {
            listaabono = await abonoService.Listar(a => true);
        }
        else if (filtro == "FacturaId"&&int.TryParse(valorFiltro,out int FacturaId))
        {
           listafactura = await FacturaService.Listar(f => f.FacturaId==FacturaId);
        }
        else if (filtro == "MontoAbono" && decimal.TryParse(valorFiltro, out decimal MontoAbono))
        {
            listaabono = await abonoService.Listar(a => a.MontoAbono == MontoAbono);
        }
        else if (filtro == "FechaAbono" && DateTime.TryParse(valorFiltro, out DateTime FechaAbono))
        {
            listaabono = await abonoService.Listar(a => a.FechaAbono == FechaAbono);
        }

    }

    private async Task Volver()
    {
        navigationManager.NavigateTo("/menu");
    }
}
